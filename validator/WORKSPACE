workspace(name = "validator")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "com_google_absl",
    sha256 = "a044481c2e8c95f9ccede90c2584fdc42a9e0ab0d56a4d032165b7d26ae689c2",
    strip_prefix = "abseil-cpp-8bb4174c348edd966ccd5c7fbfb41e5aa8146f9e",
    urls = ["https://github.com/abseil/abseil-cpp/archive/8bb4174c348edd966ccd5c7fbfb41e5aa8146f9e.zip"],
)

http_archive(
    name = "com_google_googletest",
    sha256 = "ba96972e0aa8a1428596570ac573958c1c879483bd148a2b72994453f9dfa7c2",
    strip_prefix = "googletest-2dd1c131950043a8ad5ab0d2dda0e0970596586a",
    urls = ["https://github.com/google/googletest/archive/2dd1c131950043a8ad5ab0d2dda0e0970596586a.zip"],  # 2019-01-07
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "c168f979f3dd59796957cb97cdf67e19a14dc57fe1eda87a0a8f28d114605fb8",
    strip_prefix = "protobuf-fdcb5d17b9fad351b730677025a9b19743cba2b7",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/fdcb5d17b9fad351b730677025a9b19743cba2b7.zip"],
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "017e0a91531bfc45be9eaf07e4d8fed33c488b90b58509dbd2e33a33b2648ae6",
    strip_prefix = "gflags-a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd",
    urls = ["https://github.com/gflags/gflags/archive/a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd.zip"],
)

http_archive(
    name = "com_googlesource_code_re2",
    sha256 = "66f27a152c824326af4d93ed5c54bbedfddeb17aaf2b5980d45d14d80a04e8ef",
    strip_prefix = "re2-ece4cecab5c8445d93abd98d88c899f370b4ea4a",
    urls = ["https://github.com/google/re2/archive/ece4cecab5c8445d93abd98d88c899f370b4ea4a.zip"],
)

# rules_cc defines rules for generating C++ code from Protocol Buffers.
http_archive(
    name = "rules_cc",
    sha256 = "5f862a44bbd032e1b48ed53c9c211ba2a1da60e10c5baa01c97369c249299ecb",
    strip_prefix = "rules_cc-c8c38f8c710cbbf834283e4777916b68261b359c",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/c8c38f8c710cbbf834283e4777916b68261b359c.zip"],
)
load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")
rules_cc_dependencies()

# rules_proto defines abstract rules for building Protocol Buffers.
http_archive(
    name = "rules_proto",
    sha256 = "9e6a58b72d5ea54dbc9de096760c74e10a01a3474ec8a23b0ff0415ab262f3d2",
    strip_prefix = "rules_proto-c1c78bd01e6f036c1496f760ecf30a793f4faeec",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/c1c78bd01e6f036c1496f760ecf30a793f4faeec.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/c1c78bd01e6f036c1496f760ecf30a793f4faeec.tar.gz",
    ],
)
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
rules_proto_dependencies()
rules_proto_toolchains()

http_archive(
    name = "emsdk",
    sha256 = "a0db769106f866a701920be15136a1de79d19cef40ec0fd99d12c20d9bf66306",
    strip_prefix = "emsdk-40e9cd8fbc03cf3c4041d965d9a05b843996b479/bazel",
    url = "https://github.com/emscripten-core/emsdk/archive/40e9cd8fbc03cf3c4041d965d9a05b843996b479.tar.gz",
)

load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps(emscripten_version = "2.0.31")

http_archive(
    name = "com_google_javascript_closure_library",
    sha256 = "0cb0510be60f3e8c9fac14206ca6d14c93d909eb154a964a8287180f5022b408",
    strip_prefix = "closure-library-31a330ac7e83580a1edfde418e34cbf3e32b849c",
    urls = ["https://github.com/google/closure-library/archive/31a330ac7e83580a1edfde418e34cbf3e32b849c.tar.gz"],
)

http_archive(
    name = "io_bazel_rules_closure",
    sha256 = "9498e57368efb82b985db1ed426a767cbf1ba0398fd7aed632fc3908654e1b1e",
    strip_prefix = "rules_closure-0.12.0",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
        "https://github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
    ],
)

load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
rules_closure_dependencies()
rules_closure_toolchains()

local_repository(
    name = "amphtml-extensions",
    path = "../extensions",
)
